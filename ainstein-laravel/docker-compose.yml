version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ainstein-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/nginx.conf:/etc/nginx/sites-available/default
      - ./docker/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    ports:
      - "8000:80"
    depends_on:
      - mysql
      - redis
    networks:
      - ainstein-network
    environment:
      - APP_ENV=production
      - DB_HOST=mysql
      - DB_DATABASE=ainstein
      - DB_USERNAME=ainstein
      - DB_PASSWORD=secure_password
      - REDIS_HOST=redis
      - CACHE_STORE=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis

  mysql:
    image: mysql:8.0
    container_name: ainstein-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ainstein
      MYSQL_USER: ainstein
      MYSQL_PASSWORD: secure_password
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_ROOT_HOST: '%'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
    ports:
      - "3306:3306"
    networks:
      - ainstein-network

  redis:
    image: redis:7.0-alpine
    container_name: ainstein-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ainstein-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ainstein-phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root_password
    depends_on:
      - mysql
    networks:
      - ainstein-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  ainstein-network:
    driver: bridge