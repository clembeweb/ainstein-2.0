================================================================================
                    AINSTEIN DATABASE - ER DIAGRAM ASCII
================================================================================
                        Multi-Tenant SaaS Architecture
                          Generated: 2025-10-10
================================================================================

LEGENDA:
  [PK] = Primary Key (ULID)
  [FK] = Foreign Key
  [UQ] = Unique Constraint
  [IX] = Index
  →    = Foreign Key Relationship
  ⇄    = Bidirectional Relationship

================================================================================
                            CORE MULTI-TENANT HUB
================================================================================

┌──────────────────────────────────────────────────────────────────┐
│                            TENANTS                               │
├──────────────────────────────────────────────────────────────────┤
│ [PK] id (ULID)                                                   │
│      name                                                        │
│ [UQ] subdomain                                                   │
│ [UQ] domain (nullable)                                           │
│      plan_type (DEFAULT 'starter')                               │
│      tokens_monthly_limit (INT)                                  │
│      tokens_used_current (INT)                                   │
│      status (DEFAULT 'active')                                   │
│      theme_config (JSON)                                         │
│      brand_config (JSON)                                         │
│      stripe_customer_id                                          │
│      stripe_subscription_id                                      │
│      created_at, updated_at                                      │
└──────────────────────────────────────────────────────────────────┘
                                 │
                                 │
         ┌───────────────────────┼───────────────────────┐
         │                       │                       │
         ▼                       ▼                       ▼
  ┌─────────────┐         ┌─────────────┐       ┌─────────────┐
  │   USERS     │         │  CONTENTS   │       │   CREWS     │
  │─────────────│         │─────────────│       │─────────────│
  │[PK] id      │         │[PK] id      │       │[PK] id      │
  │[FK] tenant  │         │[FK] tenant  │       │[FK] tenant  │
  │    email[UQ]│         │[FK] creator │       │[FK] creator │
  │    role     │         │    url [IX] │       │    name     │
  └─────────────┘         │    type     │       │    status   │
         │                │    source   │       └─────────────┘
         │                │    keyword  │              │
         │                └─────────────┘              │
         │                       │                     │
         │                       │                     │
         │                       ▼                     ▼
         │              ┌──────────────────┐    ┌──────────────┐
         │              │CONTENT_GENERATION│    │ CREW_AGENTS  │
         │              │──────────────────│    │──────────────│
         │              │[PK] id           │    │[FK] crew_id  │
         │              │[FK] content_id   │    │    name      │
         │              │     (page_id ⚠️) │    │    role      │
         │              │[FK] tenant_id    │    │    tools JSON│
         │              │[FK] prompt_id    │    │    order     │
         │              │[FK] created_by   │    └──────────────┘
         │              │    status        │
         │              │    ai_model      │
         │              │    tokens_used   │
         │              │    generated_text│
         │              └──────────────────┘
         │
         │ has_many (created_by) ⚠️ MISSING in User model
         │
         ├─→ content_generations (8+ relazioni mancanti)
         ├─→ created_contents
         ├─→ created_cms_connections
         ├─→ created_content_imports
         ├─→ created_crews
         ├─→ created_crew_templates
         ├─→ triggered_crew_executions
         └─→ revoked_api_keys


================================================================================
                        CONTENT MANAGEMENT SYSTEM
================================================================================

┌─────────────────────────────────────────────────────────────────┐
│                       CONTENT LIFECYCLE                         │
└─────────────────────────────────────────────────────────────────┘

  1. CONNECT                2. IMPORT              3. GENERATE
     │                         │                       │
     ▼                         ▼                       ▼
┌────────────────┐    ┌─────────────────┐    ┌──────────────────┐
│CMS_CONNECTIONS │───→│CONTENT_IMPORTS  │───→│CONTENTS          │
│────────────────│    │─────────────────│    │──────────────────│
│[PK] id         │    │[PK] id          │    │[PK] id           │
│[FK] tenant_id  │    │[FK] tenant_id   │    │[FK] tenant_id    │
│[FK] created_by │    │[FK] cms_conn_id │    │[FK] created_by   │
│    name [UQ]   │    │[FK] created_by  │    │[UQ] (tenant, url)│
│    type        │    │    import_type  │    │     ⚠️ MISSING   │
│    endpoint    │    │    status       │    │    url           │
│    api_key     │    │    total_rows   │    │    content_type  │
│    status      │    │    processed    │    │    source        │
│    last_sync_at│    │    successful   │    │    keyword       │
│    sync_config │    │    failed       │    │    meta_data JSON│
└────────────────┘    │    errors JSON  │    │    status        │
                      └─────────────────┘    └──────────────────┘
                                                      │
                                                      │ has_many
                                                      ▼
                                            ┌──────────────────────┐
                                            │CONTENT_GENERATIONS   │
                                            │──────────────────────│
                                            │[PK] id               │
                                            │[FK] content_id       │
                                            │     (page_id legacy) │
                                            │[FK] prompt_id  ─────→│
                                            │[FK] tenant_id        │
                                            │[FK] created_by       │
                                            │    status            │
                                            │    execution_mode    │
                                            │    generated_content │
                                            │    tokens_used       │
                                            │    started_at        │
                                            │    completed_at      │
                                            └──────────────────────┘
                                                      │
                                                      │ belongs_to
                                                      ▼
                                            ┌─────────────────┐
                                            │    PROMPTS      │
                                            │─────────────────│
                                            │[PK] id          │
                                            │[FK] tenant_id   │
                                            │[FK] tool_id     │
                                            │    name         │
                                            │    alias [UQ]   │
                                            │    template     │
                                            │    variables    │
                                            │    is_global    │
                                            │    is_system    │
                                            └─────────────────┘


================================================================================
                        ADVERTISING CAMPAIGNS SYSTEM
================================================================================

┌─────────────────────┐
│   ADV_CAMPAIGNS     │
│─────────────────────│
│[PK] id (ULID)       │
│[FK] tenant_id       │
│    name             │
│    info             │
│    keywords         │
│    type (rsa/pmax)  │
│    language         │
│    url              │
│    tokens_used      │
│    model_used       │
│[IX] tenant_id       │
│[IX] type            │
│[IX] created_at      │
└─────────────────────┘
         │
         │ has_many
         ▼
┌──────────────────────────┐
│ ADV_GENERATED_ASSETS     │
│──────────────────────────│
│[PK] id (ULID)            │
│[FK] campaign_id          │
│    type (rsa/pmax)       │
│    titles (JSON array)   │
│    long_titles (JSON)    │
│    descriptions (JSON)   │
│    ai_quality_score      │
│[IX] campaign_id          │
│[IX] type                 │
└──────────────────────────┘

RSA Limits: 3-15 titles (30 chars), 2-4 descriptions (90 chars)
PMAX Limits: 3-5 short titles, 1-5 long titles, 1-5 descriptions


================================================================================
                        AI CREWS MULTI-AGENT SYSTEM
================================================================================

┌────────────────────────────────────────────────────────────────┐
│                        CREW ECOSYSTEM                          │
└────────────────────────────────────────────────────────────────┘

                      ┌─────────────────┐
                      │     CREWS       │
                      │─────────────────│
                      │[PK] id          │
                      │[FK] tenant_id   │
                      │[FK] created_by  │
                      │    name         │
                      │    description  │
                      │    process_type │
                      │    status       │
                      │    config JSON  │
                      │    soft_deletes │
                      └─────────────────┘
                              │
                ┌─────────────┼─────────────┐
                │             │             │
                ▼             ▼             ▼
        ┌─────────────┐ ┌───────────┐ ┌────────────────┐
        │CREW_AGENTS  │ │CREW_TASKS │ │CREW_EXECUTIONS │
        │─────────────│ │───────────│ │────────────────│
        │[FK] crew_id │ │[FK]crew_id│ │[FK] crew_id    │
        │    name     │ │[FK]agent  │ │[FK] tenant_id  │
        │    role     │ │   descript│ │[FK] triggered  │
        │    goal     │ │   depend. │ │     _by (user) │
        │    backstory│ │   order   │ │    status      │
        │    tools    │ └───────────┘ │    started_at  │
        │    llm_cfg  │               │    completed_at│
        │    order    │               │    tokens_used │
        └─────────────┘               │    cost        │
                │                     │    results JSON│
                │                     │    error_msg   │
                │                     └────────────────┘
                │                            │
                │                            │ has_many
                │                            ▼
                │                  ┌──────────────────────┐
                └─────────────────→│CREW_EXECUTION_LOGS   │
                                   │──────────────────────│
                                   │[PK] id               │
                                   │[FK] crew_execution_id│
                                   │[FK] task_id          │
                                   │[FK] agent_id         │
                                   │    level (enum)      │
                                   │    message           │
                                   │    data JSON         │
                                   │    tokens_used       │
                                   │    logged_at         │
                                   │[IX](execution, time) │
                                   │[IX](execution, level)│
                                   └──────────────────────┘

┌──────────────────┐         ┌──────────────────┐
│CREW_TEMPLATES    │         │CREW_AGENT_TOOLS  │
│──────────────────│         │──────────────────│
│[PK] id           │         │[PK] id           │
│[FK] tenant_id    │         │    name [UQ]     │
│[FK] created_by   │         │    description   │
│    name          │         │    type (enum)   │
│    description   │         │    config JSON   │
│    category      │         │    is_active     │
│    crew_config   │         │[IX](active,type) │
│    is_system     │         └──────────────────┘
│    is_public     │
│    usage_count   │
│    rating        │
│    soft_deletes  │
└──────────────────┘


================================================================================
                        TOOLS & SETTINGS SYSTEM
================================================================================

┌─────────────────┐
│     TOOLS       │ (Platform-wide AI Tools)
│─────────────────│
│[PK] id (ULID)   │
│    code [UQ]    │
│    name         │
│    category     │ ENUM: copy, seo, adv
│    description  │
│    icon         │
│    is_active    │
│    settings_    │
│    schema (JSON)│
│[IX](cat,active) │
└─────────────────┘
        │
        │ has_many
        ├──────────────────┬─────────────────┐
        │                  │                 │
        ▼                  ▼                 ▼
┌─────────────┐    ┌──────────────┐   ┌────────────┐
│  PROMPTS    │    │TOOL_SETTINGS │   │(other refs)│
│─────────────│    │──────────────│   └────────────┘
│[FK] tool_id │    │[FK] tenant_id│
│[FK] tenant  │    │[FK] tool_id  │
│    template │    │    settings  │
│    is_global│    │    is_active │
│    is_system│    │[UQ](tenant,  │
└─────────────┘    │     tool)    │
                   └──────────────┘


================================================================================
                        SUPPORTING TABLES
================================================================================

┌─────────────────┐  ┌──────────────────┐  ┌──────────────────┐
│   API_KEYS      │  │ USAGE_HISTORIES  │  │  ACTIVITY_LOGS   │
│─────────────────│  │──────────────────│  │──────────────────│
│[PK] id          │  │[PK] id           │  │[PK] id           │
│[FK] tenant_id   │  │[FK] tenant_id    │  │⚠️  tenant_id     │
│[FK] created_by  │  │    month         │  │    (MISSING!)    │
│[FK] revoked_by  │  │    tokens_used   │  │[FK] user_id      │
│    name         │  │    pages_gen     │  │    action        │
│[UQ] key         │  │    api_calls     │  │    entity        │
│    last_used    │  │[UQ](tenant,month)│  │    entity_id     │
│    expires_at   │  │    created_at    │  │    metadata JSON │
│    is_active    │  │⚠️  updated_at    │  │    ip_address    │
│    permissions  │  │    (MISSING!)    │  │    user_agent    │
│    revoked_at   │  └──────────────────┘  │    created_at    │
└─────────────────┘                        └──────────────────┘

┌──────────────────┐  ┌──────────────────┐  ┌──────────────────┐
│ TENANT_BRANDS    │  │ GSC_CONNECTIONS  │  │    WEBHOOKS      │
│──────────────────│  │──────────────────│  │──────────────────│
│[PK] id (ULID)    │  │[PK] id           │  │[PK] id           │
│[FK] tenant_id    │  │[FK] tenant_id    │  │[FK] tenant_id    │
│    brand_name    │  │    property_url  │  │    url           │
│    logo_url      │  │    access_token  │  │    events        │
│    favicon_url   │  │    refresh_token │  │    secret        │
│    primary_color │  │    expires_at    │  │    is_active     │
│    ...colors     │  │    is_active     │  │    created_at    │
│    theme_mode    │  │[UQ](tenant,url)  │  │    updated_at    │
│    custom_css    │  │    created_at    │  └──────────────────┘
│    social_links  │  │    updated_at    │
│    is_active     │  └──────────────────┘
│[IX](tenant,      │
│     active)      │  ⚠️ MISSING in Tenant model:
└──────────────────┘     brands() relationship


================================================================================
                        PLANS & SUBSCRIPTIONS
================================================================================

┌─────────────────┐
│     PLANS       │ (Subscription Plans)
│─────────────────│
│[PK] id (ULID)   │
│    name         │
│[UQ] slug        │
│    description  │
│    price_monthly│
│    price_yearly │
│    tokens_limit │
│    features JSON│
│    max_users    │
│    max_api_keys │
│    is_active    │
│    sort_order   │
│[IX](active,sort)│
└─────────────────┘
         │
         │ hasMany (via plan_type matching slug)
         │
         ▼
    ┌─────────┐
    │ TENANTS │
    │ plan_type = slug
    └─────────┘


================================================================================
                        CRITICAL ANOMALIES VISUAL
================================================================================

⚠️  ANOMALY #1: Naming Inconsistency
    ┌──────────────────────┐
    │CONTENT_GENERATIONS   │
    │──────────────────────│
    │ page_id ❌           │  Should be: content_id
    │   ↓                  │
    │   Foreign Key to:    │
    │   contents.id ✓      │  NOT pages.id
    └──────────────────────┘

⚠️  ANOMALY #2: Missing tenant_id
    ┌──────────────────┐       ┌─────────┐
    │ ACTIVITY_LOGS    │──❌──→│ TENANTS │
    │──────────────────│       └─────────┘
    │ user_id ✓        │       Missing direct FK!
    │ tenant_id ❌     │       Must JOIN via users
    └──────────────────┘       Slow query!

⚠️  ANOMALY #3: Missing Inverse Relationships
    ┌──────────┐                 ┌──────────────────────┐
    │  USERS   │─────────────❌─→│CONTENT_GENERATIONS   │
    │──────────│                 │──────────────────────│
    │ id       │                 │ created_by (FK)      │
    └──────────┘                 └──────────────────────┘
         │                       User.contentGenerations()
         │                       MISSING! (N+1 problem)
         └─────────────────❌─→ 8 relations mancanti


⚠️  ANOMALY #4: Missing Unique Constraint
    ┌──────────────────┐
    │   CONTENTS       │
    │──────────────────│
    │ tenant_id        │
    │ url              │  ← INDEX, but NOT UNIQUE per tenant
    └──────────────────┘     Allows duplicates! ❌


================================================================================
                        INDEX STRATEGY (PERFORMANCE)
================================================================================

COMPOSITE INDEXES IMPLEMENTED:
✓ (tenant_id, status)        → contents, content_generations, cms_connections
✓ (tenant_id, created_at)    → crews, crew_executions
✓ (crew_execution_id, level) → crew_execution_logs
✓ (is_system, is_public)     → crew_templates
✓ (category, is_active)      → tools

MISSING INDEXES (ADD):
⚠️ (tenant_id, created_at)   → activity_logs (CRITICAL)
⚠️ (tenant_id, url) UNIQUE   → contents (HIGH)
⚠️ created_by                → cms_connections, content_imports, crews

UNIQUE CONSTRAINTS COMPLETE:
✓ tenants.subdomain
✓ tenants.domain
✓ users.email
✓ api_keys.key
✓ tools.code
✓ crew_agent_tools.name
✓ (tenant_id, alias)         → prompts
✓ (tenant_id, name)          → cms_connections
✓ (tenant_id, property_url)  → gsc_connections
✓ (tenant_id, month)         → usage_histories
✓ (tenant_id, tool_id)       → tool_settings


================================================================================
                        DATA FLOW EXAMPLES
================================================================================

CONTENT GENERATION FLOW:
┌─────┐  1  ┌─────┐  2  ┌────────┐  3  ┌──────────────┐  4  ┌────────┐
│USER │────→│CMS  │────→│CONTENT │────→│CONTENT_GEN   │────→│PROMPT  │
│     │     │CONN │     │IMPORT  │     │              │     │        │
└─────┘     └─────┘     └────────┘     └──────────────┘     └────────┘
   │                                           │                  │
   │                                           ▼                  │
   └──────────────────────────────→  ┌──────────────┐  ←────────┘
                                      │   CONTENTS   │
                                      │              │
                                      │ Generated AI │
                                      │   content    │
                                      └──────────────┘

CREW EXECUTION FLOW:
┌─────┐  trigger  ┌──────────────┐  orchestrate  ┌────────┐
│USER │──────────→│CREW_EXECUTION│──────────────→│ CREW   │
└─────┘           └──────────────┘               └────────┘
                         │                           │
                         │                           │
                         ▼                           ▼
                  ┌─────────────┐            ┌────────────┐
                  │EXECUTION_LOG│            │CREW_AGENTS │
                  │             │            │CREW_TASKS  │
                  │ Detailed    │            │            │
                  │ tracking    │            │ Execute    │
                  └─────────────┘            └────────────┘


================================================================================
                        PERFORMANCE METRICS
================================================================================

QUERY EFFICIENCY (Before → After optimization):

Tenant Dashboard:
  Before: SELECT * FROM tenants WHERE id = ?                    [1 query]
          foreach content: SELECT * FROM users WHERE id = ?    [+50 queries]
          foreach generation: SELECT * FROM prompts...         [+200 queries]
          TOTAL: 251 queries ❌

  After:  Tenant::with(['contents.creator', 'contents.generations.prompt'])
          TOTAL: 5 queries ✓ (96% reduction)

Activity Logs per Tenant:
  Before: SELECT activity_logs.*
          FROM activity_logs
          JOIN users ON activity_logs.user_id = users.id
          WHERE users.tenant_id = ?                            [SLOW JOIN]

  After:  SELECT * FROM activity_logs
          WHERE tenant_id = ?                                  [FAST INDEX]
          Performance: 10x faster ✓


================================================================================
                        SOFT DELETES IMPLEMENTATION
================================================================================

Tables WITH soft_deletes:
✓ contents (deleted_at)
✓ crews (deleted_at)
✓ crew_agents (deleted_at)
✓ crew_tasks (deleted_at)
✓ crew_executions (deleted_at)
✓ crew_templates (deleted_at)

Tables NEEDING soft_deletes:
⚠️ content_generations (for audit trail)
⚠️ adv_campaigns (for historical data)


================================================================================
                        JSON COLUMNS USAGE
================================================================================

CONFIGURATION:
- tenants: theme_config, brand_config
- crews: configuration
- crew_agents: tools, llm_config
- crew_tasks: context, dependencies
- crew_executions: input_variables, results, execution_log, metadata

DATA:
- users: preferences, onboarding_tools_completed
- contents: meta_data
- content_generations: variables
- prompts: variables
- cms_connections: sync_config
- content_imports: errors

SCHEMA:
- tools: settings_schema (defines validation rules)
- tool_settings: settings
- activity_logs: metadata
- tenant_brands: custom_css, social_links


================================================================================
                        TENANT ISOLATION PATTERN
================================================================================

Every multi-tenant table MUST have:
1. tenant_id column (FK to tenants.id)
2. Index on tenant_id
3. Composite index (tenant_id, frequently_queried_column)
4. Global scope in Model (optional but recommended)

Example:
┌─────────────┐
│  Contents   │
│─────────────│
│ tenant_id   │ [FK] → tenants.id
│ status      │
│─────────────│
│ INDEX(tenant_id)           ✓
│ INDEX(tenant_id, status)   ✓
└─────────────┘

Model:
protected static function booted()
{
    static::addGlobalScope('tenant', function (Builder $builder) {
        if (auth()->check()) {
            $builder->where('tenant_id', auth()->user()->tenant_id);
        }
    });
}


================================================================================
                        MIGRATION TIMELINE
================================================================================

Batch 1 (Initial Setup):
- cache, jobs, plans, platform_settings
- tenants, users, pages
- prompts, cms_connections, gsc_connections
- api_keys, content_generations, webhooks
- usage_histories, activity_logs, tenant_brands

Batch 2 (Social Auth + ADV):
- add social auth to users
- sessions, personal_access_tokens
- adv_campaigns, adv_generated_assets

Batch 3 (Execution Modes):
- add execution_mode to content_generations

Batch 4 (Fix Foreign Keys):
- fix content_generations FK to contents ⚠️ Legacy page_id

Batch 5 (AI Crews System):
- crews, crew_agents, crew_tasks
- crew_executions, crew_execution_logs
- crew_agent_tools, crew_templates

Next (Proposed Fixes):
- Batch 6: Rename page_id → content_id
- Batch 7: Add tenant_id to activity_logs
- Batch 8: Add missing indexes
- Batch 9: Add UNIQUE constraints


================================================================================
                        RELATIONSHIPS QUICK REFERENCE
================================================================================

TENANT (Hub):
→ users, contents, contentGenerations, prompts
→ cmsConnections, gscConnections, apiKeys
→ webhooks, usageHistories, activities
→ toolSettings, contentImports, advCampaigns
→ crews, crewExecutions, crewTemplates
⚠️ brands (MISSING)

USER:
→ tenant (belongsTo)
→ sessions, activities, apiKeys
⚠️ contentGenerations (MISSING)
⚠️ createdContents (MISSING)
⚠️ 6 more relations MISSING

CONTENT:
→ tenant, creator (user)
→ generations (ContentGeneration)

CONTENT_GENERATION:
→ content (page_id → contents.id)
→ tenant, prompt, creator

CREW:
→ tenant, creator
→ agents, tasks, executions

CREW_EXECUTION:
→ crew, tenant, triggeredBy
→ logs (detailed tracking)


================================================================================
                        END OF ER DIAGRAM
================================================================================

Generated by: AINSTEIN Eloquent Relationships Master
Date: 2025-10-10
Total Tables: 27
Total Relationships: 85+
Overall Grade: B+ (85/100)

For detailed analysis, see:
- AINSTEIN_DATABASE_ANALYSIS_REPORT.md (full report)
- IMMEDIATE_ACTIONS.md (action plan)
- DATABASE_ANALYSIS_SUMMARY.md (executive summary)

================================================================================
